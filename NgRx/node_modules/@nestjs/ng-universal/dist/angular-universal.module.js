"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var AngularUniversalModule_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AngularUniversalModule = void 0;
const common_1 = require("@angular/common");
const common_2 = require("@nestjs/common");
const core_1 = require("@nestjs/core");
const fs_1 = require("fs");
const path_1 = require("path");
require("reflect-metadata");
const angular_universal_constants_1 = require("./angular-universal.constants");
const angular_universal_providers_1 = require("./angular-universal.providers");
let AngularUniversalModule = AngularUniversalModule_1 = class AngularUniversalModule {
    constructor(ngOptions, httpAdapterHost) {
        this.ngOptions = ngOptions;
        this.httpAdapterHost = httpAdapterHost;
    }
    static forRoot(options) {
        const indexHtml = fs_1.existsSync(path_1.join(options.viewsPath, 'index.original.html'))
            ? 'index.original.html'
            : 'index';
        options = Object.assign({ templatePath: indexHtml, rootStaticPath: '*.*', renderPath: '*' }, options);
        return {
            module: AngularUniversalModule_1,
            providers: [
                {
                    provide: angular_universal_constants_1.ANGULAR_UNIVERSAL_OPTIONS,
                    useValue: options
                }
            ]
        };
    }
    onModuleInit() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.httpAdapterHost) {
                return;
            }
            const httpAdapter = this.httpAdapterHost.httpAdapter;
            if (!httpAdapter) {
                return;
            }
            const app = httpAdapter.getInstance();
            app.get(this.ngOptions.renderPath, (req, res) => res.render(this.ngOptions.templatePath, {
                req,
                res,
                providers: [{ provide: common_1.APP_BASE_HREF, useValue: req.baseUrl }]
            }));
        });
    }
};
AngularUniversalModule = AngularUniversalModule_1 = __decorate([
    common_2.Module({
        providers: [...angular_universal_providers_1.angularUniversalProviders]
    }),
    __param(0, common_2.Inject(angular_universal_constants_1.ANGULAR_UNIVERSAL_OPTIONS)),
    __metadata("design:paramtypes", [Object, core_1.HttpAdapterHost])
], AngularUniversalModule);
exports.AngularUniversalModule = AngularUniversalModule;
