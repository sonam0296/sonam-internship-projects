"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const nodeExternals = require("webpack-node-externals");
const defaultEntries = {
    server: './server/main.ts'
};
class WebpackConfigFactory {
    static create(webpack, entry = defaultEntries, currentDir = process.cwd(), projectDir = currentDir) {
        return {
            entry,
            mode: 'none',
            target: 'node',
            resolve: { extensions: ['.ts', '.js'] },
            externals: [
                { '../server/main': 'require("./server/main")' },
                nodeExternals({
                    whitelist: /^(?!(@nestjs\/(common|core|microservices)|livereload|concurrently)).*/
                })
            ],
            output: {
                path: path_1.join(currentDir, 'dist'),
                filename: '[name].js'
            },
            module: {
                noParse: /polyfills-.*\.js/,
                rules: [
                    { test: /\.ts$/, loader: 'ts-loader' },
                    {
                        test: /(\\|\/)@angular(\\|\/)core(\\|\/).+\.js$/,
                        parser: { system: true }
                    }
                ]
            },
            plugins: [
                new webpack.ContextReplacementPlugin(/((.+)?angular(\\|\/)core(.+)?|express(.+)?|(.+)?nestjs(\\|\/)(.+)?)?/, path_1.join(projectDir, 'src'), {})
            ]
        };
    }
}
exports.WebpackConfigFactory = WebpackConfigFactory;
