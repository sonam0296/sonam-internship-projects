{"version":3,"file":"express-engine.js","sources":["../../../../../../modules/common/engine/src/file-loader.ts","../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/common/engine/src/index.ts","../../../../../../modules/common/engine/private_api.ts","../../../../../../modules/common/engine/public_api.ts","../../../../../../modules/common/engine/index.ts","../../../../../../modules/express-engine/src/main.ts","../../../../../../modules/express-engine/public_api.ts","../../../../../../modules/express-engine/index.ts","../../../../../../modules/express-engine/express-engine.ts"],"names":["fs.readFile","fs.readFileSync"],"mappings":";;;;;;;AAUA;AACA,MAAa,UAAU;AAAG,IACxB,GAAG,CAAC,GAAW;AAAI,QACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;AACvC,YAAMA,QAAW,CAAC,GAAG,EAAE,CAAC,GAAiC,EAAE,IAAY;AACvE,gBAAQ,IAAI,GAAG,EAAE;AACjB,oBAAU,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC7B,iBAAS;AACT,gBACQ,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjC,aAAO,CAAC,CAAC;AACT,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACA;ACTA;AACA;AACA;AACA;AACA;AACA,MAAa,YAAY;AACzB,IAaE,YAAoB,eAAgD,EAChD,YAA8B,EAAE;AAAI,QADpC,oBAAe,GAAf,eAAe,CAAiC;AAAC,QACjD,cAAS,GAAT,SAAS,CAAuB;AAAC,QAJ7C,oBAAe,GAAG,IAAI,GAAG,EAAiC,CAAC;AACrE,QAAU,kBAAa,GAA4B,EAAE,CAAC;AACtD,KAE0D;AAC1D;AAEsD,IAfpD,WAAW;AAAK,QACd,MAAM,eAAe,GAAoB,qBAAqB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AACnG,QACI,OAAO,eAAe,CAAC,cAAc,CAAC;AAC1C,YAAM,EAAC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC,EAAC;AAC9E,SAAK,CAAC,CAAC;AACP,KAAG;AACH;AACO;AACL;AAAsB;AAAQ,IASxB,MAAM,CAAC,IAAmB;AAAI;AACO;AACQ,YAAjD,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,KAAI,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAA0B,CAAC,CAAA,CAAC;AACzF,YAAI,MAAM,cAAc,GAAG;AAC3B,gBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;AAC/B,gBAAM,IAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;AAC/B,gBAAM;AACN,oBAAQ,OAAO,EAAE,cAAc;AAC/B,oBAAQ,QAAQ,EAAE;AAClB,wBAAU,QAAQ,EAAE,GAAG;AACvB,wBAAU,GAAG,EAAE,IAAI,CAAC,GAAG;AACvB,qBAAS;AACT,iBAAO;AACP,aAAK,CAAC;AACN,YACI,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,SAAS,CAAC;AACnE,YAAI,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;AAC3D,YACI,OAAO,mBAAmB,CAAC,OAAO,EAAE,EAAC,cAAc,EAAC,CAAC,CAAC;AAC1D,SAAG;AAEF,KAFE;AACH;AAEC,IAAO,UAAU,CAAC,eAA+C;AAAI;AACtC;AACQ,YAApC,IAAI,eAAe,YAAY,eAAe,EAAE;AACpD,gBAAM,OAAO,eAAe,CAAC;AAC7B,aAAK;AAAC,iBAAK;AACX;AACU,gBAAJ,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AACtE;AAES,gBAAH,IAAI,aAAa,EAAE;AACzB,oBAAQ,OAAO,aAAa,CAAC;AAC7B,iBAAO;AACP;AAES,gBAAH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;AACnF,gBAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;AACzD,gBACM,OAAO,OAAO,CAAC;AACrB,aAAK;AACL,SAAG;AAEF,KAFE;AACH;AAEC,IAAS,WAAW,CAAC,QAAgB;AAAI,QACtC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;AAC3E,YAAIC,YAAe,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzC;AAEG,QAAC,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAChC,KAAG;AACH;AACA;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACyBA;AACA;AACA;AACA,MAAM,aAAa,GAA8B,EAAE,CAAC;AAEpD;AACA;AACA;AACA,SAAgB,eAAe,CAAC,YAAsC;AACtE,IAAE,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC;AAClF,IACE,OAAO,UAAU,QAAgB,EAChB,OAAe,EACf,QAAqD;AACxE,QAAI,IAAI;AACR,YAAM,MAAM,aAAa,GAAG,kBAAK,OAAO,CAAmB,CAAC;AAC5D,YAAM,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;AAC/D,gBAAQ,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;AAC7F,aAAO;AACP,YACM,MAAM,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;AACpC,YAAM,MAAM,GAAG,GAAG,aAAa,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;AAC/C,YACM,aAAa,CAAC,GAAG;AACvB,gBAAM,aAAa,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,QAAQ,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,WAAW,EAAE,CAAC;AAC5F,YAAM,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC/E,YACM,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,IAAI,EAAE,CAAC;AAC9D,YAAM,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC7F,YACM,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;AAClC,iBAAS,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC3C,iBAAS,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzB,SAAK;AAAC,QAAA,OAAO,GAAG,EAAE;AAClB,YAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpB,SAAK;AACL,KAAG,CAAC;AACJ,CAAC;AAED;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,GAAY,EAAE,GAAc;AAAI,IAC1D,MAAM,SAAS,GAAqB;AACtC,QAAI;AACJ,YAAM,OAAO,EAAE,OAAO;AACtB,YAAM,QAAQ,EAAE,GAAG;AACnB,SAAK;AACL,KAAG,CAAC;AACJ,IAAE,IAAI,GAAG,EAAE;AACX,QAAI,SAAS,CAAC,IAAI,CAAC;AACnB,YAAM,OAAO,EAAE,QAAQ;AACvB,YAAM,QAAQ,EAAE,GAAG;AACnB,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACE,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;AACA;AACA;AACA,SAAS,WAAW,CAAC,QAAgB;AAAI,IACvC,OAAO,aAAa,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC,QAAQ,CAAC,IAAIA,YAAe,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AACnG;AACA;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACG","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport * as fs from 'fs';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException | null, data: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(data.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport { Compiler, CompilerFactory, NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport { FileLoader } from './file-loader';\nimport { RenderOptions } from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory?: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n    const factory = await this.getFactory(moduleOrFactory);\n\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  async getFactory(moduleOrFactory: Type<{}> | NgModuleFactory<{}>): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return moduleOrFactory;\n    } else {\n      // we're in JIT mode\n      const moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return moduleFactory;\n      }\n\n      // Compile the module and cache it\n      const factory = await this.getCompiler().compileModuleAsync(moduleOrFactory);\n      this.factoryCacheMap.set(moduleOrFactory, factory);\n\n      return factory;\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './interfaces';\nexport * from './file-loader';\nexport * from './engine';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine,\n  RenderOptions as ɵRenderOptions } from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Request, Response } from 'express';\nimport * as fs from 'fs';\n\nimport { NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { ɵCommonEngine as CommonEngine } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * These are the allowed options for the engine\n */\nexport interface NgSetupOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n}\n\n/**\n * These are the allowed options for the render\n */\nexport interface RenderOptions extends NgSetupOptions {\n  req: Request;\n  res?: Response;\n  url?: string;\n  document?: string;\n}\n\n/**\n * This holds a cached version of each index used.\n */\nconst templateCache: { [key: string]: string } = {};\n\n/**\n * This is an express engine for handling Angular Applications\n */\nexport function ngExpressEngine(setupOptions: Readonly<NgSetupOptions>) {\n  const engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n\n  return function (filePath: string,\n                   options: object,\n                   callback: (err?: Error | null, html?: string) => void) {\n    try {\n      const renderOptions = { ...options } as RenderOptions;\n      if (!setupOptions.bootstrap && !renderOptions.bootstrap) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      const req = renderOptions.req;\n      const res = renderOptions.res || req.res;\n\n      renderOptions.url =\n      renderOptions.url || `${req.protocol}://${(req.get('host') || '')}${req.originalUrl}`;\n      renderOptions.document = renderOptions.document || getDocument(filePath);\n\n      renderOptions.providers = renderOptions.providers || [];\n      renderOptions.providers = renderOptions.providers.concat(getReqResProviders(req, res));\n\n      engine.render(renderOptions)\n        .then(html => callback(null, html))\n        .catch(callback);\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req: Request, res?: Response): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: REQUEST,\n      useValue: req\n    }\n  ];\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res\n    });\n  }\n\n  return providers;\n}\n\n/**\n * Get the document at the file path\n */\nfunction getDocument(filePath: string): string {\n  return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ngExpressEngine, NgSetupOptions, RenderOptions } from './src/main';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}